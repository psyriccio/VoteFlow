//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2016.10.02 at 12:38:04 PM MSK 
//


package psyriccio.voteflow.api.jaxb.votes.impl;

import java.util.ArrayList;
import java.util.List;
import javax.annotation.Generated;
import javax.xml.bind.JAXBElement;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElementRef;
import javax.xml.bind.annotation.XmlElementRefs;
import javax.xml.bind.annotation.XmlMixed;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlType;
import psyriccio.voteflow.api.jaxb.BaseObj;
import psyriccio.voteflow.api.jaxb.votes.Result;

@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "", propOrder = {
    "content"
})
@XmlRootElement(name = "result")
@Generated(value = "com.sun.tools.internal.xjc.Driver", date = "2016-10-02T12:38:04+03:00", comments = "JAXB RI v2.2.8-b130911.1802")
public class ResultImpl
    extends BaseObj
    implements Result
{

    @XmlElementRefs({
        @XmlElementRef(name = "page", type = JAXBElement.class, required = false),
        @XmlElementRef(name = "pageSize", type = JAXBElement.class, required = false),
        @XmlElementRef(name = "vote", type = VoteImpl.class, required = false),
        @XmlElementRef(name = "wording", type = JAXBElement.class, required = false),
        @XmlElementRef(name = "totalCount", type = JAXBElement.class, required = false)
    })
    @XmlMixed
    @Generated(value = "com.sun.tools.internal.xjc.Driver", date = "2016-10-02T12:38:04+03:00", comments = "JAXB RI v2.2.8-b130911.1802")
    protected List<Object> content;

    @Generated(value = "com.sun.tools.internal.xjc.Driver", date = "2016-10-02T12:38:04+03:00", comments = "JAXB RI v2.2.8-b130911.1802")
    public List<Object> getContent() {
        if (content == null) {
            content = new ArrayList<Object>();
        }
        return this.content;
    }

}
